---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/playlistItems?key=AIzaSyD5F8jWLoWYO0qQGKChQ5uiTw1EvRO3N9w&maxResults=50&part=snippet,status&playlistId=PLOGi5-fAu8bH_T9HhH9V2B5izEE4G5waV
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Length:
      - '0'
      User-Agent:
      - Yt::Request (gzip)
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Tue, 18 Jul 2017 17:43:55 GMT
      Date:
      - Tue, 18 Jul 2017 17:43:55 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"m2yskBQFythfE4irbTIeOgYYfBU/Bwv6bwNEJosmIiqQAorcB6T8muo"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '23090'
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 18 Jul 2017 17:43:53 GMT
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/playlists?id=PLOGi5-fAu8bH_T9HhH9V2B5izEE4G5waV&key=AIzaSyD5F8jWLoWYO0qQGKChQ5uiTw1EvRO3N9w&part=snippet
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Length:
      - '0'
      User-Agent:
      - Yt::Request (gzip)
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Tue, 18 Jul 2017 17:43:55 GMT
      Date:
      - Tue, 18 Jul 2017 17:43:55 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"m2yskBQFythfE4irbTIeOgYYfBU/yVyVXdMv2ZSjHYlcpi-Vas2NeZ8"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '1655'
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="39,38,37,36,35"
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "youtube#playlistListResponse",
         "etag": "\"m2yskBQFythfE4irbTIeOgYYfBU/yVyVXdMv2ZSjHYlcpi-Vas2NeZ8\"",
         "pageInfo": {
          "totalResults": 1,
          "resultsPerPage": 5
         },
         "items": [
          {
           "kind": "youtube#playlist",
           "etag": "\"m2yskBQFythfE4irbTIeOgYYfBU/YMp8YsyOJrw_UPF__xIQe6101Ew\"",
           "id": "PLOGi5-fAu8bH_T9HhH9V2B5izEE4G5waV",
           "snippet": {
            "publishedAt": "2017-07-17T18:31:59.000Z",
            "channelId": "UCAuUUnT6oDeKwE6v1NGQxug",
            "title": "How your brain functions in different situations",
            "description": "When you're doing something, what's your brain up to? Which neurons are firing where, and why? These fascinating talks will give you a hint.",
            "thumbnails": {
             "default": {
              "url": "https://i.ytimg.com/vi/qKJv4S5peJQ/default.jpg",
              "width": 120,
              "height": 90
             },
             "medium": {
              "url": "https://i.ytimg.com/vi/qKJv4S5peJQ/mqdefault.jpg",
              "width": 320,
              "height": 180
             },
             "high": {
              "url": "https://i.ytimg.com/vi/qKJv4S5peJQ/hqdefault.jpg",
              "width": 480,
              "height": 360
             },
             "standard": {
              "url": "https://i.ytimg.com/vi/qKJv4S5peJQ/sddefault.jpg",
              "width": 640,
              "height": 480
             },
             "maxres": {
              "url": "https://i.ytimg.com/vi/qKJv4S5peJQ/maxresdefault.jpg",
              "width": 1280,
              "height": 720
             }
            },
            "channelTitle": "TED",
            "localized": {
             "title": "How your brain functions in different situations",
             "description": "When you're doing something, what's your brain up to? Which neurons are firing where, and why? These fascinating talks will give you a hint."
            }
           }
          }
         ]
        }
    http_version: 
  recorded_at: Tue, 18 Jul 2017 17:43:53 GMT
recorded_with: VCR 3.0.3
